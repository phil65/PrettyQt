name: Python package

on: [push]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04, macos-10.15, windows-latest]
        python-version: ["3.9", "3.10"]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopengl0 libegl1-mesa libxcb-xinput0 libpulse-mainloop-glib0 libgstreamer1.0-0 gstreamer1.0-tools gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-alsa gstreamer1.0-libav libxvidcore4 bluez bluetooth blueman speech-dispatcher-espeak-ng flite libflite1 pulseaudio speech-dispatcher speech-dispatcher-flite
    # - name: Run services
    #   if: runner.os == 'Linux'
    #   run: |
    #     speech-dispatcher -d
    # - name: Python Poetry Action
    #   uses: abatilo/actions-poetry@v2.1.0
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install poetry
        poetry install -E pyside6
    - name: Test with pytest
      uses: GabrielBB/xvfb-action@v1
      timeout-minutes: 5
      with:
        run: |
          poetry run pytest --doctest-modules --junitxml=junit/test-results.xml --cov=prettyqt --cov-report=xml --cov-report=html
    - name: Create documentation
      if: matrix.python-version == '3.10' && runner.os == 'Linux'
      run: |
        poetry run mkdocs build
    - name: Build and publish
      if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.10' && runner.os == 'Linux'
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_SECRET }}
        poetry publish --build
    - name: Deploy docs
      if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.10' && runner.os == 'Linux'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

  deploy:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Build and publish
      uses: d1618033/gh-action-python-publish-using-poetry@master
      with:
        pypi_username: __token__
        pypi_password: ${{ secrets.PYPI_SECRET }}
    # - name: Deploy docs
    #   # if: github.event_name == 'push'
    #   uses: mhausenblas/mkdocs-deploy-gh-pages@master
    #   # Or use mhausenblas/mkdocs-deploy-gh-pages@nomaterial to build without the mkdocs-material theme
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     # CUSTOM_DOMAIN: optionaldomain.com
    - name: Install packages
      # if: runner.os == 'Linux'
      run: |
        pip install poetry
        poetry install -E pyside6
        poetry run mkdocs build
    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
